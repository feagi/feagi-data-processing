name: Staging Merge - Prerelease

on:
  pull_request:
    branches: [ staging ]
    types: [ closed ]

env:
  CARGO_TERM_COLOR: always

jobs:
  prerelease:
    runs-on: ubuntu-latest
    # Only run if the PR was actually merged (not just closed)
    if: github.event.pull_request.merged == true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: staging  # Ensure we're on the staging branch after merge
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Get version from Cargo.toml
      id: version
      run: |
        VERSION=$(grep '^version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
        CRATE_NAME=$(grep '^name = ' Cargo.toml | sed 's/name = "\(.*\)"/\1/')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "crate_name=$CRATE_NAME" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        echo "Crate name: $CRATE_NAME"
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Build package
      run: cargo build --release
    
    - name: Package crate
      run: cargo package --verbose
    
    - name: Publish to crates.io
      run: |
        echo "Publishing beta version ${{ steps.version.outputs.version }} of ${{ steps.version.outputs.crate_name }} to crates.io..."
        
        # Publish to the official crates.io registry
        cargo publish --token ${{ secrets.CARGO_PUSH_TOKEN }}
        
        echo "âœ… Beta package published successfully to crates.io"
      continue-on-error: false
    
    - name: Create prerelease tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        TAG_NAME="v${{ steps.version.outputs.version }}-pre"
        echo "Creating prerelease tag: $TAG_NAME"
        
        git tag "$TAG_NAME"
        git push origin "$TAG_NAME"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create GitHub Prerelease
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}-pre
        release_name: Prerelease v${{ steps.version.outputs.version }}
        body: |
          ðŸš€ Beta release of ${{ steps.version.outputs.crate_name }} v${{ steps.version.outputs.version }}
          
          This is a beta version from the staging branch, published to crates.io.
          
          **Changes:**
          - Version: ${{ steps.version.outputs.version }}
          - Branch: staging
          - Commit: ${{ github.sha }}
          
          **Testing:**
          - âœ… All tests passed
          - âœ… Package builds successfully
          - âœ… Published to crates.io as beta version
          - âœ… Ready for testing
          
          **Installation:**
          ```
          cargo add ${{ steps.version.outputs.crate_name }}@${{ steps.version.outputs.version }}
          ```
          
          **Note:** This beta version is available on crates.io for testing and integration.
        draft: false
        prerelease: true 
